Requirements
============

- the php cli
- the Zeta Components php library (only for generating tarballs and html docs from rst)
- command line tools: svn and/or git, doxygen


How to install and use eZ Extension Builder
===========================================

This is a 4 steps tutorial. The fifth step is optional ;-)


1. Download the pakefile script
-------------------------------

Usually you would run the build script in root directory of your extension,
but that is not a strict prerequisite. ::

    wget http://svn.projects.ez.no/ezextensionbuilder/stable/pake/pakefile.php


2. Launch the pakefile script for the first time
------------------------------------------------

The script is able to bootstrap, ie. to download all missing components the
first time that you run it: ::

    php pakefile.php

This will create a directory ./pake/ and download all needed stuff into it from http://svn.projects.ez.no/ezextensionbuilder.


3. Edit the configuration file
------------------------------

A sample configuration file is provided by the extension: ./pake/options-sample.yaml
You should copy it to ./pake/options-myextension.yaml and edit it to suit your needs.
Note that steps 1 to 3 have to be executed only once.


4. Launch the final build
-------------------------

To get a list of all available tasks run::

    php pakefile.php --tasks

To build your extension run::

    php pakefile.php build myextension

NB: every time the extension is built, a fresh version is retrieved from its
svn/github repository. The local copy is not used at all.

NB: The Zeta Components library must be available in your php include_path. If it
is not, you can set the environment variable PHP_CLASSPATH to make it available
to the script.


5. Creating a packaged version of the extension
-----------------------------------------------

An ezpackage is a file with the .ezpkg extension, that can contain different
types of eZ Publish contents and structures, and even complete extensions.
Packages can be used to easily share those things between different eZ Publish
installations, or for eg. backup purposes.

To create a packaged version of an extension, you only need to
1. produce an xml 'manifest' file describing your extension
2. tell to the ezextensionbuilder script to create the package

Step 1:
The xml manifest file must be named 'package.xml' and be avaialble in the root
directory of the extension.
NB: some of the tags in this file will be automatically updated during the 'build'
task, such as version number and licensing, so you do not need to worry about them.
The easiest way to create a package.xml file is to run the 'generate-sample-package-xml'
task, which will produce a sample file package.xml in the current directory, then
copy it to the appropriate directory and edit with the appropriate values.

Step 2:
It is sufficient to add the following settings to the yaml configuration file to
have the complete package built as part of the 'dist' task:
create:
    ezpackage: yes


More information
================

Read the README file and anything in the ./docs/ folder for more details
