Introduction
============

1. What is the eZ Extension Builder?
------------------------------------

A set of php files and tools to build eZ Publish extensions and deliverables.
It is based on the Pake tool.

2. License
----------

This software is licensed under the GNU General Public License v2.0 . The
complete license agreement is included in the LICENSE file. For more information
or questions please contact info@ez.no

3. Requirements
---------------

- the php cli
- Pake version 1.6.1 or later.
  You can get it either from https://github.com/indeyets/pake/wiki
  or as part of the extension itself, the first time you run the pakefile.php script
- the Zeta Components php library (only for generating tarballs and html docs from rst)
- command line tools: svn and/or git, doxygen

4. Installing
-------------

Read the INSTALL file to get started


Directory structure
===================

Let's call ROOT_DIR the directory where you will be running the build script.
This directory will usually be the top-level directory of your extension, but
it can in fact be anywhere else.::

ROOT_DIR/
 |___pakefile.php this is the script driving the build
 |___build/myext  a copy of the extension myext will be downloaded here during the build
 |___dist/        tarballs produced by the build will be made available here
 `___pake/
     |___doc/     more documentation, such as changelogs, todos and known bugs
     |___src/     a complete copy of the pake tool
     |___README   this file
     |___INSTALL  installation instructions
     |___LICENSE  license file
     |___doxyfile_master configuration file used when the generate-documentation task is set to create api docs via doxygen
     |___options-ezextensionbuilder.yaml configuration file used to build this extension itself
     `___options-sample.yaml a sample configuration file

As you can see, we try to pollute as little as possible the ROOT_DIR: everything
is neatly stowed away in the pake, build and dist subdirectories.

FAQ
===

- Can a standalone copy of pake be used with the pakefile instead of the bundled one?
    Yes: just use a different command line: ::
    php pake.php build myext

- Can multiple extensions be built in the same ROOT_DIR?
    Yes. Just create an option file for each

- Can the script use my previous configuration files used with the ant-based version?
    Yes. Use the convert-configuration task for converting them to the new format

- Can I download a complete zip of the tool instead of doing the bootstrap?
    Yes. Come back later for a list of urls to use ;-)

- Interaction with git/svn: which files to commit in my repo, which ones not?
    If you plan to build in the root dir of your extension, you can very easily
    add a single file to your versioned source code:
    ./pake/options-myextension.yaml
    You should configure git / svn to ignore all other files in the pake/
    directory, as well as the complete build/ and dist/ directories, and the
    ./pakefile.php file
